{
  "openapi": "3.0.0",
  "info": {
    "title": "Express API",
    "description": "A microblogging platform API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get all posts.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/posts"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create a post.",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid body"
          },
          "401": {
            "description": "Invalid JWT token"
          },
          "403": {
            "description": "Admin access required"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post"
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get a post by Id.",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "summary": "Update a post by id.",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Invalid body"
          },
          "401": {
            "description": "Invalid JWT token"
          },
          "403": {
            "description": "Admin access required"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete a post by id.",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Invalid JWT token"
          },
          "403": {
            "description": "Admin access required"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create an user.",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid body"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Get authorization token.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jwtToken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid body"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "post": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "Awesome text"
          }
        },
        "required": [
          "content"
        ]
      },
      "posts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/post"
        }
      },
      "jwtToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJ...w5c"
          }
        },
        "required": [
          "token"
        ]
      },
      "user": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "example": "passwd123"
          }
        },
        "required": [
          "username",
          "password"
        ]
      }
    },
    "parameters": {
      "id": {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "securitySchemes": {
      "jwtAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}